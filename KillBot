local args = {
    [1] = "setup"
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Hexa"):FireServer(unpack(args))

-- Define the target position
local targetPosition = Vector3.new(-10.57323932647705, -5.207256317138672, 5.755485534667969) -- Change these coordinates to your desired location

-- Get the local player
local player = game.Players.LocalPlayer

-- Check if the player's character exists
if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
    -- Teleport the character by changing the position of its HumanoidRootPart
    player.Character:WaitForChild("HumanoidRootPart").CFrame = CFrame.new(targetPosition)
else
    -- Wait for the character to load if it hasn't yet
    player.CharacterAdded:Wait()
    local character = player.Character
    if character and character:FindFirstChild("HumanoidRootPart") then
        character:WaitForChild("HumanoidRootPart").CFrame = CFrame.new(targetPosition)

   end
end


local players = game:GetService("Players")
local player = players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

local screenGui = Instance.new("ScreenGui")
screenGui.Name = "TestGui"
screenGui.Parent = playerGui

local textButton = Instance.new("TextButton")
textButton.Name = "FirstTextButton"
local firstButton = script.Parent

textButton.Parent = screenGui
textButton.Size = UDim2.new(0, 50, 0, 50)
textButton.Position = UDim2.new(0.5, 200, 0.5, -150)
textButton.BackgroundColor3 = Color3.new(0.389, 0, 0)
textButton.Draggable = true

textButton.Text = "E"
textButton.TextColor3 = Color3.new(255, 255, 255)
textButton.TextScaled = true
textButton.Font = Enum.Font.SourceSansBold
textButton.BorderColor3 = Color3.new(255, 0, 0)
textButton.BorderSizePixel = 5
textButton.MouseButton1Click:Connect(function()


-- Get necessary services and the player
local Players = game:GetService("Players")
local player = Players.LocalPlayer

-- Wait for the player's character to be added
local character = player.Character or player.CharacterAdded:Wait()

-- Wait for the character's humanoid and animator to be ready
local humanoid = character:WaitForChild("Humanoid")
local animator = humanoid:WaitForChild("Animator")

-- Create a new Animation instance
local animation = Instance.new("Animation")

-- Set the AnimationId to your animation's ID. Replace 'rbxassetid://16144816662'
animation.AnimationId = "rbxassetid://75459203439371" 

-- Load the animation into an AnimationTrack
local animationTrack = animator:LoadAnimation(animation)

-- Play the animation
animationTrack:Play()
wait(0.45)
local args = {
    [1] = "Rocket Launcher"
}

game:GetService("ReplicatedStorage"):WaitForChild("RetroAbility"):FireServer(unpack(args))


end)

local players = game:GetService("Players")
local player = players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

local screenGui = Instance.new("ScreenGui")
screenGui.Name = "TestGui"
screenGui.Parent = playerGui

local textButton = Instance.new("TextButton")
textButton.Name = "SecondTextButton"

textButton.Parent = screenGui
textButton.Size = UDim2.new(0, 50, 0, 50)
textButton.Position = UDim2.new(0.5, 50, 0.5, -150)
textButton.BackgroundColor3 = Color3.new(0.389, 0, 0)
textButton.Draggable = true

textButton.Text = "R"
textButton.TextColor3 = Color3.new(255, 255, 255)
textButton.TextScaled = true
textButton.Font = Enum.Font.SourceSansBold
textButton.BorderColor3 = Color3.new(255, 0, 0)
textButton.BorderSizePixel = 5
textButton.MouseButton1Click:Connect(function()


local player = game.Players.LocalPlayer
   local character = player.Character
   local humanoid = character:FindFirstChildWhichIsA("Humanoid")

   if humanoid then
       humanoid.WalkSpeed = 0


-- Get necessary services and the player
local Players = game:GetService("Players")
local player = Players.LocalPlayer

-- Wait for the player's character to be added
local character = player.Character or player.CharacterAdded:Wait()

-- Wait for the character's humanoid and animator to be ready
local humanoid = character:WaitForChild("Humanoid")
local animator = humanoid:WaitForChild("Animator")

-- Create a new Animation instance
local animation = Instance.new("Animation")

-- Set the AnimationId to your animation's ID. Replace 'rbxassetid://16144816662'
animation.AnimationId = "rbxassetid://16881872560" 

-- Load the animation into an AnimationTrack
local animationTrack = animator:LoadAnimation(animation)

-- Play the animation
animationTrack:Play()


wait(2)

local player = game.Players.LocalPlayer
   local character = player.Character
   local humanoid = character:FindFirstChildWhichIsA("Humanoid")

   if humanoid then
       humanoid.WalkSpeed = 200
animationTrack:Stop()


-- Get the local player
local Players = game:GetService("Players")
local localPlayer = Players.LocalPlayer

-- Check if the player exists before proceeding
if not localPlayer then
    warn("Local player not found!")
    return
end

-- Wait for the character to load
local character = localPlayer.Character or localPlayer.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")

-- Make the humanoid jump by setting its Jump property to true
humanoid.Jump = true


local player = game.Players.LocalPlayer
   local character = player.Character
   local humanoid = character:FindFirstChildWhichIsA("Humanoid")

   if humanoid then
       humanoid.JumpPower = 330


-- Get necessary services and the player
local Players = game:GetService("Players")
local player = Players.LocalPlayer

-- Wait for the player's character to be added
local character = player.Character or player.CharacterAdded:Wait()

-- Wait for the character's humanoid and animator to be ready
local humanoid = character:WaitForChild("Humanoid")
local animator = humanoid:WaitForChild("Animator")

-- Create a new Animation instance
local animation = Instance.new("Animation")

-- Set the AnimationId to your animation's ID. Replace 'rbxassetid://16144816662'
animation.AnimationId = "rbxassetid://16898368253" 

-- Load the animation into an AnimationTrack
local animationTrack = animator:LoadAnimation(animation)

-- Play the animation
animationTrack:Play()



wait(3.65)




local args = {
    [1] = "Bomb"
}

game:GetService("ReplicatedStorage"):WaitForChild("RetroAbility"):FireServer(unpack(args))


-- Get necessary services and the player
local Players = game:GetService("Players")
local player = Players.LocalPlayer

-- Wait for the player's character to be added
local character = player.Character or player.CharacterAdded:Wait()

-- Wait for the character's humanoid and animator to be ready
local humanoid = character:WaitForChild("Humanoid")
local animator = humanoid:WaitForChild("Animator")

-- Create a new Animation instance
local animation = Instance.new("Animation")

-- Set the AnimationId to your animation's ID. Replace 'rbxassetid://16144816662'
animation.AnimationId = "rbxassetid://78983287679672" 

-- Load the animation into an AnimationTrack
local animationTrack = animator:LoadAnimation(animation)

-- Play the animation
animationTrack:Play()


local player = game.Players.LocalPlayer
   local character = player.Character
   local humanoid = character:FindFirstChildWhichIsA("Humanoid")

   if humanoid then
       humanoid.WalkSpeed = 17


local player = game.Players.LocalPlayer
   local character = player.Character
   local humanoid = character:FindFirstChildWhichIsA("Humanoid")

   if humanoid then
       humanoid.JumpPower = 50


                                
          
        end
      end
    end
  end        
end
end)

local players = game:GetService("Players")
local player = players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

local screenGui = Instance.new("ScreenGui")
screenGui.Name = "TestGui"
screenGui.Parent = playerGui

local textButton = Instance.new("TextButton")
textButton.Name = "ThirdTextButton"

textButton.Parent = screenGui
textButton.Size = UDim2.new(0, 50, 0, 50)
textButton.Position = UDim2.new(0.5, 125, 0.5, -50)
textButton.BackgroundColor3 = Color3.new(0.389, 0, 0)
textButton.Draggable = true

textButton.Text = "D"
textButton.TextColor3 = Color3.new(255, 255, 255)
textButton.TextScaled = true
textButton.Font = Enum.Font.SourceSansBold
textButton.BorderColor3 = Color3.new(255, 0, 0)
textButton.BorderSizePixel = 5
textButton.MouseButton1Click:Connect(function()

-- Get necessary services and the player
local Players = game:GetService("Players")
local player = Players.LocalPlayer

-- Wait for the player's character to be added
local character = player.Character or player.CharacterAdded:Wait()

-- Wait for the character's humanoid and animator to be ready
local humanoid = character:WaitForChild("Humanoid")
local animator = humanoid:WaitForChild("Animator")

-- Create a new Animation instance
local animation = Instance.new("Animation")

-- Set the AnimationId to your animation's ID. Replace 'rbxassetid://16144816662'
animation.AnimationId = "rbxassetid://117174405466885" 

-- Load the animation into an AnimationTrack
local animationTrack = animator:LoadAnimation(animation)

-- Play the animation
animationTrack:Play()




wait(0.25)
-- Get necessary services and the player
local Players = game:GetService("Players")
local player = Players.LocalPlayer

-- Wait for the player's character to be added
local character = player.Character or player.CharacterAdded:Wait()

-- Wait for the character's humanoid and animator to be ready
local humanoid = character:WaitForChild("Humanoid")
local animator = humanoid:WaitForChild("Animator")

-- Create a new Animation instance
local animation = Instance.new("Animation")

-- Set the AnimationId to your animation's ID. Replace 'rbxassetid://16144816662'
animation.AnimationId = "rbxassetid://78983287679672" 

-- Load the animation into an AnimationTrack
local animationTrack = animator:LoadAnimation(animation)

-- Play the animation
animationTrack:Play()



local args = {
    [1] = "Bomb"
}

game:GetService("ReplicatedStorage"):WaitForChild("RetroAbility"):FireServer(unpack(args))


end)
